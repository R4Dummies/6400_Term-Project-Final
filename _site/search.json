[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Ricky Woznichak",
    "section": "",
    "text": "I’m Ricky Woznichak, a passionate digital marketing professional and current M.S. candidate in Digital Marketing at Cal Poly Pomona. Prior to my stint as an actor, I cut my teeth as an Assistant Digital Media Planner at UM, crafting campaigns for clients like Sony Home Entertainment and IHOP. Along the way I also honed my storytelling and people skills as a substitute teacher and—true story—an awesome waiter. I’ve led SEO initiatives, mastered tools like Google Analytics and SEMrush, and built interactive R and Quarto dashboards that turn complex insights into clear action. When I’m not geeking out over forecasting models for my Productfolio.com thesis, you’ll find me strolling with my dog Jimmy — because great ideas often strike when you’re off screen.\nYou can find my entire journey on Linkedin - Let’s Connect!\n\n\n\n\n\nCalifornia State Polytechnic University, Pomona | California | June 2010\n\n\n\n\n\nCalifornia State Polytechnic University, Pomona | California | August 2025\n\n\n\n\n\nJohn Franklin Insurance | Marketing Manager | 2024-2025\nLos Angeles Unified School District |Substitute Teacher & Special Education Teacher | 2019—2024\nMama Shelter, Esterel, Mixto | Server + Banquet Server |2013—2024\nStudio71 | Sales Development Coordinator | 2012—2013\nUniversal McCann | Assistant Digital Media Planner |2011—2012\nUniversal Music Group | Digital Marketing Coordinator | 2010—2011"
  },
  {
    "objectID": "index.html#education",
    "href": "index.html#education",
    "title": "Ricky Woznichak",
    "section": "",
    "text": "California State Polytechnic University, Pomona | California | June 2010\n\n\n\n\n\nCalifornia State Polytechnic University, Pomona | California | August 2025"
  },
  {
    "objectID": "index.html#work-experience",
    "href": "index.html#work-experience",
    "title": "Ricky Woznichak",
    "section": "",
    "text": "John Franklin Insurance | Marketing Manager | 2024-2025\nLos Angeles Unified School District |Substitute Teacher & Special Education Teacher | 2019—2024\nMama Shelter, Esterel, Mixto | Server + Banquet Server |2013—2024\nStudio71 | Sales Development Coordinator | 2012—2013\nUniversal McCann | Assistant Digital Media Planner |2011—2012\nUniversal Music Group | Digital Marketing Coordinator | 2010—2011"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site\n\n1 + 1\n\n[1] 2"
  },
  {
    "objectID": "FinalRJS.html",
    "href": "FinalRJS.html",
    "title": "Summary Tables with gtsummary",
    "section": "",
    "text": "We can create a summary table and modify it for various statistical analyses using the {gtsummary} package.\n\n\n\nVersatile Output: Supports summary statistics, regression models, survival analysis, and more — all formatted beautifully.\nCustomizable: Easily change labels, statistics, and formatting without needing to manually tweak tables.\nPublication-Ready: Outputs clean, APA-style tables with minimal effort — ideal for reports, papers, and presentations.\nReproducibility: Tables are generated directly from your analysis pipeline, reducing the risk of transcription errors."
  },
  {
    "objectID": "FinalRJS.html#why-gtsummary-matters",
    "href": "FinalRJS.html#why-gtsummary-matters",
    "title": "Summary Tables with gtsummary",
    "section": "📦 Why {gtsummary} Matters",
    "text": "📦 Why {gtsummary} Matters\n\nVersatile Output: Supports summary statistics, regression models, survival analysis, and more — all formatted beautifully.\nCustomizable: Easily change labels, statistics, and formatting without needing to manually tweak tables.\nPublication-Ready: Outputs clean, APA-style tables with minimal effort — ideal for reports, papers, and presentations.\nReproducibility: Tables are generated directly from your analysis pipeline, reducing the risk of transcription errors."
  },
  {
    "objectID": "FinalRJS.html#how-it-can-help-us",
    "href": "FinalRJS.html#how-it-can-help-us",
    "title": "Summary Tables with gtsummary",
    "section": "🎓📈 How It Can Help Us",
    "text": "🎓📈 How It Can Help Us\n\nIn School:\n\nCreate polished tables for homework, theses, or presentations.\nSave time formatting — focus more on the analysis itself.\nImpress your professors with professional-grade outputs.\n\nIn Your Career:\n\nQuickly generate high-quality tables for client reports, internal documents, or academic publications.\nStreamline analysis workflows with reproducible and automated reporting.\nIntegrate with tools like Quarto, R Markdown, and Shiny apps for interactive or dynamic reporting."
  },
  {
    "objectID": "FinalRJS.html#how-does-gtsummary-differ-from-gt-and-gtextras",
    "href": "FinalRJS.html#how-does-gtsummary-differ-from-gt-and-gtextras",
    "title": "Summary Tables with gtsummary",
    "section": "How does gtsummary differ from gt and gtExtras?",
    "text": "How does gtsummary differ from gt and gtExtras?"
  },
  {
    "objectID": "FinalRJS.html#gt",
    "href": "FinalRJS.html#gt",
    "title": "Summary Tables with gtsummary",
    "section": "gt",
    "text": "gt\n\nPurpose: A core package for creating flexible and beautiful tables in R.\nStrength: Great for custom-designed tables from scratch, especially for presenting summary stats, formatted text, etc.\nUsage: You have to manually define your data transformations and table formatting.\nThink of it as: A powerful table engine, similar to ggplot2 but for tables."
  },
  {
    "objectID": "FinalRJS.html#gtextras",
    "href": "FinalRJS.html#gtextras",
    "title": "Summary Tables with gtsummary",
    "section": "gtExtras",
    "text": "gtExtras\n\nPurpose: A set of helper functions that work on top of gt to make common formatting tasks easier.\nStrength: Adds shortcuts for enhancements like:\n\nHeatmaps\nSparklines\nFancy styling presets\n\nUsage: It extends gt and saves time on visual and layout improvements.\nThink of it as: Add-ons to style and beautify your gt tables quickly."
  },
  {
    "objectID": "FinalRJS.html#gtsummary",
    "href": "FinalRJS.html#gtsummary",
    "title": "Summary Tables with gtsummary",
    "section": "gtsummary",
    "text": "gtsummary\n\nPurpose: Built specifically for statistical reporting and clinical-style summary tables.\nStrengths:\n\nAutomatically identifies variable types (continuous, categorical, dichotomous).\nBuilds “Table 1”-style summaries with a single line of code.\nEasily adds:\n\nP-values (add_p())\nConfidence intervals\nRegression summaries (tbl_regression())\nInline reporting\n\nHighly customizable using tidyselect syntax.\n\nUses gt under the hood for the table rendering.\nThink of it as: A reporting-focused abstraction layer that does 90% of the formatting and logic for you."
  },
  {
    "objectID": "FinalRJS.html#inline-reporting-with-inline_text",
    "href": "FinalRJS.html#inline-reporting-with-inline_text",
    "title": "Summary Tables with gtsummary",
    "section": "Inline Reporting with inline_text()",
    "text": "Inline Reporting with inline_text()\n\nYou can pull values directly from a table into your R Markdown text — like odds ratios, p-values, or confidence intervals.\nExample:\n\"The odds ratio for age isr inline_text(tbl, variable = “age”).\"\nKeeps your results synced automatically with your tables — no manual copy-paste needed!"
  },
  {
    "objectID": "FinalRJS.html#formula-syntax-for-customizing-variables",
    "href": "FinalRJS.html#formula-syntax-for-customizing-variables",
    "title": "Summary Tables with gtsummary",
    "section": "Formula Syntax for Customizing Variables",
    "text": "Formula Syntax for Customizing Variables\n\nCustomize labels, types, stats, and digits using formula-like syntax (e.g., variable ~ value).\nSupports tidyselect helpers like all_continuous(), starts_with(\"age\"), etc.\nLets you target multiple variables with one line for streamlined styling."
  },
  {
    "objectID": "FinalRJS.html#merge-and-stack-tables-easily-tbl_merge-tbl_stack",
    "href": "FinalRJS.html#merge-and-stack-tables-easily-tbl_merge-tbl_stack",
    "title": "Summary Tables with gtsummary",
    "section": "Merge and Stack Tables Easily (tbl_merge(), tbl_stack())",
    "text": "Merge and Stack Tables Easily (tbl_merge(), tbl_stack())\n\nCombine multiple tables:\n\nSide-by-side (e.g., univariable vs. multivariable regression)\nTop-to-bottom (e.g., adjusted vs. unadjusted estimates)\n\nHelps you build complex, publication-quality tables without breaking a sweat."
  },
  {
    "objectID": "FinalRJS.html#gtsummary-chart",
    "href": "FinalRJS.html#gtsummary-chart",
    "title": "Summary Tables with gtsummary",
    "section": "Gtsummary Chart",
    "text": "Gtsummary Chart"
  },
  {
    "objectID": "FinalRJS.html#the-p-value",
    "href": "FinalRJS.html#the-p-value",
    "title": "Summary Tables with gtsummary",
    "section": "The P-Value:",
    "text": "The P-Value:\nA p-value of 0.001 from the Chi-square test suggests that there is a statistically significant association between keyword intent and ranking position for productfolio.com. Considering that the p-value is much lower than 0.05, which is the commonly used significance level, we reject the null hypothesis that there is no relationship between keyword intent and position. Stated differently, certain keyword intent types (informational, commercial, etc.) meaningfully influence where Google search results rank websites. This means that some keywords may attract higher traffic than others for this domain niche, and this information can be used in future content planning or SEO."
  },
  {
    "objectID": "FinalRJS.html#thank-you-very-much",
    "href": "FinalRJS.html#thank-you-very-much",
    "title": "Summary Tables with gtsummary",
    "section": "Thank You Very Much",
    "text": "Thank You Very Much"
  },
  {
    "objectID": "FinalRJS.html#test-2",
    "href": "FinalRJS.html#test-2",
    "title": "Ricky Woznichak",
    "section": "Test 2",
    "text": "Test 2\nTest 3"
  },
  {
    "objectID": "Woznichak,Richard-M08-Reflection Essay-gtsummary.html",
    "href": "Woznichak,Richard-M08-Reflection Essay-gtsummary.html",
    "title": "Summary Tables with gtsummary",
    "section": "",
    "text": "We can create a summary table and modify it for various statistical analyses using the {gtsummary} package.\n\n\n\nVersatile Output: Supports summary statistics, regression models, survival analysis, and more — all formatted beautifully.\nCustomizable: Easily change labels, statistics, and formatting without needing to manually tweak tables.\nPublication-Ready: Outputs clean, APA-style tables with minimal effort — ideal for reports, papers, and presentations.\nReproducibility: Tables are generated directly from your analysis pipeline, reducing the risk of transcription errors."
  },
  {
    "objectID": "Woznichak,Richard-M08-Reflection Essay-gtsummary.html#why-gtsummary-matters",
    "href": "Woznichak,Richard-M08-Reflection Essay-gtsummary.html#why-gtsummary-matters",
    "title": "Summary Tables with gtsummary",
    "section": "",
    "text": "Versatile Output: Supports summary statistics, regression models, survival analysis, and more — all formatted beautifully.\nCustomizable: Easily change labels, statistics, and formatting without needing to manually tweak tables.\nPublication-Ready: Outputs clean, APA-style tables with minimal effort — ideal for reports, papers, and presentations.\nReproducibility: Tables are generated directly from your analysis pipeline, reducing the risk of transcription errors."
  },
  {
    "objectID": "Woznichak,Richard-M08-Reflection Essay-gtsummary.html#how-it-can-help-us",
    "href": "Woznichak,Richard-M08-Reflection Essay-gtsummary.html#how-it-can-help-us",
    "title": "Summary Tables with gtsummary",
    "section": "1.2 🎓📈 How It Can Help Us",
    "text": "1.2 🎓📈 How It Can Help Us\n\nIn School:\n\nCreate polished tables for homework, theses, or presentations.\nSave time formatting — focus more on the analysis itself.\nImpress your professors with professional-grade outputs.\n\nIn Your Career:\n\nQuickly generate high-quality tables for client reports, internal documents, or academic publications.\nStreamline analysis workflows with reproducible and automated reporting.\nIntegrate with tools like Quarto, R Markdown, and Shiny apps for interactive or dynamic reporting."
  },
  {
    "objectID": "Woznichak,Richard-M08-Reflection Essay-gtsummary.html#how-does-gtsummary-differ-from-gt-and-gtextras",
    "href": "Woznichak,Richard-M08-Reflection Essay-gtsummary.html#how-does-gtsummary-differ-from-gt-and-gtextras",
    "title": "Summary Tables with gtsummary",
    "section": "2.1 How does gtsummary differ from gt and gtExtras?",
    "text": "2.1 How does gtsummary differ from gt and gtExtras?"
  },
  {
    "objectID": "Woznichak,Richard-M08-Reflection Essay-gtsummary.html#gt",
    "href": "Woznichak,Richard-M08-Reflection Essay-gtsummary.html#gt",
    "title": "Summary Tables with gtsummary",
    "section": "2.2 gt",
    "text": "2.2 gt\n\nPurpose: A core package for creating flexible and beautiful tables in R.\nStrength: Great for custom-designed tables from scratch, especially for presenting summary stats, formatted text, etc.\nUsage: You have to manually define your data transformations and table formatting.\nThink of it as: A powerful table engine, similar to ggplot2 but for tables."
  },
  {
    "objectID": "Woznichak,Richard-M08-Reflection Essay-gtsummary.html#gtextras",
    "href": "Woznichak,Richard-M08-Reflection Essay-gtsummary.html#gtextras",
    "title": "Summary Tables with gtsummary",
    "section": "2.3 gtExtras",
    "text": "2.3 gtExtras\n\nPurpose: A set of helper functions that work on top of gt to make common formatting tasks easier.\nStrength: Adds shortcuts for enhancements like:\n\nHeatmaps\nSparklines\nFancy styling presets\n\nUsage: It extends gt and saves time on visual and layout improvements.\nThink of it as: Add-ons to style and beautify your gt tables quickly."
  },
  {
    "objectID": "Woznichak,Richard-M08-Reflection Essay-gtsummary.html#gtsummary",
    "href": "Woznichak,Richard-M08-Reflection Essay-gtsummary.html#gtsummary",
    "title": "Summary Tables with gtsummary",
    "section": "2.4 gtsummary",
    "text": "2.4 gtsummary\n\nPurpose: Built specifically for statistical reporting and clinical-style summary tables.\nStrengths:\n\nAutomatically identifies variable types (continuous, categorical, dichotomous).\nBuilds “Table 1”-style summaries with a single line of code.\nEasily adds:\n\nP-values (add_p())\nConfidence intervals\nRegression summaries (tbl_regression())\nInline reporting\n\nHighly customizable using tidyselect syntax.\n\nUses gt under the hood for the table rendering.\nThink of it as: A reporting-focused abstraction layer that does 90% of the formatting and logic for you."
  },
  {
    "objectID": "Woznichak,Richard-M08-Reflection Essay-gtsummary.html#inline-reporting-with-inline_text",
    "href": "Woznichak,Richard-M08-Reflection Essay-gtsummary.html#inline-reporting-with-inline_text",
    "title": "Summary Tables with gtsummary",
    "section": "3.1 Inline Reporting with inline_text()",
    "text": "3.1 Inline Reporting with inline_text()\n\nYou can pull values directly from a table into your R Markdown text — like odds ratios, p-values, or confidence intervals.\nExample:\n\"The odds ratio for age isr inline_text(tbl, variable = “age”).\"\nKeeps your results synced automatically with your tables — no manual copy-paste needed!"
  },
  {
    "objectID": "Woznichak,Richard-M08-Reflection Essay-gtsummary.html#formula-syntax-for-customizing-variables",
    "href": "Woznichak,Richard-M08-Reflection Essay-gtsummary.html#formula-syntax-for-customizing-variables",
    "title": "Summary Tables with gtsummary",
    "section": "3.2 Formula Syntax for Customizing Variables",
    "text": "3.2 Formula Syntax for Customizing Variables\n\nCustomize labels, types, stats, and digits using formula-like syntax (e.g., variable ~ value).\nSupports tidyselect helpers like all_continuous(), starts_with(\"age\"), etc.\nLets you target multiple variables with one line for streamlined styling."
  },
  {
    "objectID": "Woznichak,Richard-M08-Reflection Essay-gtsummary.html#merge-and-stack-tables-easily-tbl_merge-tbl_stack",
    "href": "Woznichak,Richard-M08-Reflection Essay-gtsummary.html#merge-and-stack-tables-easily-tbl_merge-tbl_stack",
    "title": "Summary Tables with gtsummary",
    "section": "3.3 Merge and Stack Tables Easily (tbl_merge(), tbl_stack())",
    "text": "3.3 Merge and Stack Tables Easily (tbl_merge(), tbl_stack())\n\nCombine multiple tables:\n\nSide-by-side (e.g., univariable vs. multivariable regression)\nTop-to-bottom (e.g., adjusted vs. unadjusted estimates)\n\nHelps you build complex, publication-quality tables without breaking a sweat."
  },
  {
    "objectID": "Woznichak,Richard-M08-Reflection Essay-gtsummary.html#gtsummary-chart",
    "href": "Woznichak,Richard-M08-Reflection Essay-gtsummary.html#gtsummary-chart",
    "title": "Summary Tables with gtsummary",
    "section": "4.1 Gtsummary Chart",
    "text": "4.1 Gtsummary Chart"
  },
  {
    "objectID": "Woznichak,Richard-M08-Reflection Essay-gtsummary.html#the-p-value",
    "href": "Woznichak,Richard-M08-Reflection Essay-gtsummary.html#the-p-value",
    "title": "Summary Tables with gtsummary",
    "section": "4.2 The P-Value:",
    "text": "4.2 The P-Value:\nA p-value of 0.001 from the Chi-square test suggests that there is a statistically significant association between keyword intent and ranking position for productfolio.com. Considering that the p-value is much lower than 0.05, which is the commonly used significance level, we reject the null hypothesis that there is no relationship between keyword intent and position. Stated differently, certain keyword intent types (informational, commercial, etc.) meaningfully influence where Google search results rank websites. This means that some keywords may attract higher traffic than others for this domain niche, and this information can be used in future content planning or SEO."
  },
  {
    "objectID": "Woznichak,Richard-M08-Reflection Essay-gtsummary.html#thank-you-very-much",
    "href": "Woznichak,Richard-M08-Reflection Essay-gtsummary.html#thank-you-very-much",
    "title": "Summary Tables with gtsummary",
    "section": "4.3 Thank You Very Much",
    "text": "4.3 Thank You Very Much"
  },
  {
    "objectID": "Dashboard.html",
    "href": "Dashboard.html",
    "title": "Dashboard Example",
    "section": "",
    "text": "library(tidyverse)\nlibrary(gt)\nlibrary(scales)\nolympics_full &lt;- read_csv(\"olympics.csv\")\nolympics &lt;- olympics_full |&gt;\n  filter(!is.na(medal)) |&gt;\n  separate_wider_delim(cols = team, names = c(\"team\", \"suffix\"), delim = \"-\", too_many = \"merge\", too_few = \"align_start\") |&gt;\n  select(-suffix) |&gt;\n  mutate(medal = fct_relevel(medal, \"Bronze\", \"Silver\", \"Gold\"))"
  },
  {
    "objectID": "Dashboard.html#column---medals-by-sport-and-year",
    "href": "Dashboard.html#column---medals-by-sport-and-year",
    "title": "Dashboard Example",
    "section": "Column - Medals By Sport and Year",
    "text": "Column - Medals By Sport and Year\n\nRow - Medals by Sport\n\nsummer_olympics |&gt;\n  mutate(\n    sport = fct_lump_n(sport, n = 15),\n    sport = fct_infreq(sport),\n    sport = fct_rev(sport),\n    sport = fct_relevel(sport, \"Other\", after = 0)\n  ) |&gt;\n  ggplot(aes(y = sport, fill = medal)) +\n  geom_bar(color = \"white\") +\n  guides(fill = guide_legend(reverse = TRUE)) +\n  scale_fill_manual(\n    values = c(\n      \"Gold\" = \"#d4af37\",\n      \"Silver\" = \"#c0c0c0\",\n      \"Bronze\" = \"#cd7f32\"\n    )\n  ) +\n  scale_x_continuous(\n    breaks = seq(1000, 7000, 1000), \n    labels = label_number(big.mark = \",\")\n) +\n  labs(\n    x = NULL,\n    y = NULL,\n    fill = \"Medal\"\n  ) +\n  theme_minimal() +\n  theme(\n    legend.position = \"inside\",\n    legend.position.inside = c(0.8, 0.2),\n    legend.direction = \"horizontal\",\n    legend.background = element_rect(fill = \"white\", color = \"gray\")\n  )\n\n\n\n\n\n\n\n\n\n\nRow - Medals By Year\n\nDue to World War II, no Olympic Games were held in 1940 and 1944.\n\nsummer_olympics |&gt;\n  count(year, medal) |&gt;\n  ggplot(aes(x = year, y = n, color = medal)) +\n  geom_point(size = 0.8) +\n  geom_line() +\n  guides(color = guide_legend(reverse = TRUE)) +\n  scale_x_continuous(breaks = seq(1896, 2020, 8)) +\n  scale_color_manual(\n    values = c(\n      \"Gold\" = \"#d4af37\",\n      \"Silver\" = \"#c0c0c0\",\n      \"Bronze\" = \"#cd7f32\"\n    )\n  ) +\n  labs(\n    x = \"Year\",\n    y = NULL,\n    color = \"Medal\"\n  ) +\n  theme_minimal() +\n  theme(\n    legend.position = c(0.2, 0.8),\n    legend.direction = \"horizontal\",\n    legend.background = element_rect(\n      fill = \"white\",\n      color = \"gray\"\n    )\n  )\n\nWarning: A numeric `legend.position` argument in `theme()` was deprecated in ggplot2\n3.5.0.\nℹ Please use the `legend.position.inside` argument of `theme()` instead."
  },
  {
    "objectID": "Dashboard.html#column---medals-by-country",
    "href": "Dashboard.html#column---medals-by-country",
    "title": "Dashboard Example",
    "section": "Column - Medals By Country",
    "text": "Column - Medals By Country\n\nRow - Value boxes\n\nsummer_most_golds &lt;- summer_olympics |&gt;\n  filter(medal == \"Gold\") |&gt;\n  count(team, sort = TRUE) |&gt;\n  slice_head(n = 1)\n\nsummer_most_silvers &lt;- summer_olympics |&gt;\n  filter(medal == \"Silver\") |&gt;\n  count(team, sort = TRUE) |&gt;\n  slice_head(n = 1)\n\nsummer_most_bronzes &lt;- summer_olympics |&gt;\n  filter(medal == \"Bronze\") |&gt;\n  count(team, sort = TRUE) |&gt;\n  slice_head(n = 1)\n\n\nMost Golds:\n2363\nUnited States\n\n\nMost Silvers:\n1251\nUnited States\n\n\nMost Bronzes:\n1126\nUnited States\n\n\n\nRow - Tabsets of tables\n\nTeams sorted in descending order of total medals.\n\nsummer_olympics |&gt;\n  count(team, medal) |&gt;\n  pivot_wider(names_from = medal, values_from = n, values_fill = 0) |&gt;\n  mutate(total = Bronze + Gold + Silver) |&gt;\n  arrange(desc(total), team) |&gt;\n  slice_head(n = 30) |&gt;\n  select(Team = team, Gold, Silver, Bronze) |&gt;\n  gt() |&gt;\n  cols_align(align = \"left\", columns = Team) |&gt;\n  data_color(\n    method = \"numeric\",\n    palette = \"nord::aurora\"\n  )\n\n\n\n\n\n\n\nTeam\nGold\nSilver\nBronze\n\n\n\n\nUnited States\n2363\n1251\n1126\n\n\nSoviet Union\n830\n635\n596\n\n\nGermany\n568\n515\n614\n\n\nGreat Britain\n501\n594\n563\n\n\nFrance\n425\n490\n515\n\n\nItaly\n492\n469\n425\n\n\nAustralia\n338\n450\n506\n\n\nHungary\n432\n328\n363\n\n\nSweden\n326\n356\n332\n\n\nChina\n334\n317\n258\n\n\nRussia\n296\n278\n324\n\n\nNetherlands\n235\n283\n350\n\n\nJapan\n230\n287\n333\n\n\nEast Germany\n339\n277\n227\n\n\nCanada\n133\n224\n313\n\n\nRomania\n161\n200\n290\n\n\nDenmark\n168\n218\n166\n\n\nSouth Korea\n171\n206\n175\n\n\nPoland\n111\n185\n242\n\n\nWest Germany\n144\n172\n188\n\n\nSpain\n109\n243\n135\n\n\nBrazil\n109\n175\n191\n\n\nNorway\n148\n165\n154\n\n\nFinland\n132\n118\n200\n\n\nCuba\n164\n127\n116\n\n\nSwitzerland\n96\n175\n136\n\n\nBelgium\n93\n157\n152\n\n\nYugoslavia\n130\n161\n92\n\n\nBulgaria\n53\n142\n141\n\n\nCzechoslovakia\n79\n144\n107\n\n\n\n\n\n\n\n\n\nTeams sorted in ascending order of total medals.\n\nsummer_olympics |&gt;\n  count(team, medal) |&gt;\n  pivot_wider(names_from = medal, values_from = n, values_fill = 0) |&gt;\n  mutate(total = Bronze + Gold + Silver) |&gt;\n  arrange(total, team) |&gt;\n  slice_head(n = 30) |&gt;\n  select(Team = team, Gold, Silver, Bronze) |&gt;\n  gt() |&gt;\n  cols_align(align = \"left\", columns = Team) |&gt;\n  data_color(\n    method = \"numeric\",\n    palette = \"nord::frost\"\n  )\n\n\n\n\n\n\n\nTeam\nGold\nSilver\nBronze\n\n\n\n\nBarbados\n0\n0\n1\n\n\nBermuda\n0\n0\n1\n\n\nBonaparte\n1\n0\n0\n\n\nBotswana\n0\n1\n0\n\n\nBrynhild\n0\n1\n0\n\n\nCamille\n1\n0\n0\n\n\nCarabinier\n1\n0\n0\n\n\nCicely\n1\n0\n0\n\n\nClearwater\n0\n0\n1\n\n\nCyprus\n0\n1\n0\n\n\nDigby\n0\n0\n1\n\n\nDjibouti\n0\n0\n1\n\n\nDon Schufro\n0\n0\n1\n\n\nElvis Va\n1\n0\n0\n\n\nEritrea\n0\n0\n1\n\n\nFantlet\n1\n0\n0\n\n\nFemur\n1\n0\n0\n\n\nFormosa\n0\n0\n1\n\n\nFrimousse\n0\n0\n1\n\n\nGabon\n0\n1\n0\n\n\nGuatemala\n0\n1\n0\n\n\nGuyana\n0\n0\n1\n\n\nIraq\n0\n0\n1\n\n\nJordan\n1\n0\n0\n\n\nKosovo\n1\n0\n0\n\n\nLaurea\n0\n0\n1\n\n\nMacedonia\n0\n0\n1\n\n\nMauritius\n0\n0\n1\n\n\nMignon\n0\n0\n1\n\n\nMonaco\n0\n0\n1"
  },
  {
    "objectID": "Dashboard.html#column---medals-by-sport-and-year-1",
    "href": "Dashboard.html#column---medals-by-sport-and-year-1",
    "title": "Dashboard Example",
    "section": "Column - Medals by sport and year",
    "text": "Column - Medals by sport and year\n\nRow - Medals By Sport\n\nwinter_olympics |&gt;\n  mutate(\n    sport = fct_lump_n(sport, n = 15),\n    sport = fct_infreq(sport),\n    sport = fct_rev(sport),\n    sport = fct_relevel(sport, \"Other\", after = 0)\n  ) |&gt;\n  ggplot(aes(y = sport, fill = medal)) +\n  geom_bar() +\n  guides(fill = guide_legend(reverse = TRUE)) +\n    scale_fill_manual(\n    values = c(\n      \"Gold\" = \"#d4af37\",\n      \"Silver\" = \"#c0c0c0\",\n      \"Bronze\" = \"#cd7f32\"\n    )\n  ) +\n  scale_x_continuous(\n    breaks = seq(100, 2000, 100), \n    labels = label_number(big.mark = \",\")\n) +\n  labs(\n    x = NULL,\n    y = NULL,\n    fill = \"Medal\"\n  ) +\n  theme_minimal() +\n  theme(\n    legend.position = \"inside\",\n    legend.position.inside = c(0.8, 0.2),\n    legend.direction = \"horizontal\",\n    legend.background = element_rect(fill = \"white\", color = \"gray\")\n  )\n\n\n\n\n\n\n\n\n\n\nRow - Medals By Year\n\nDue to World War II, no olympic games were held in 1940 and 1944.\n\nwinter_olympics |&gt;\n  count(year, medal) |&gt;\n  ggplot(aes(x = year, y = n, color = medal)) +\n  geom_point(size = 0.8) +\n  geom_line() +\n  guides(color = guide_legend(reverse = TRUE)) +\n  scale_x_continuous(breaks = seq(1896, 2020, 8)) +\n  scale_color_manual(\n    values = c(\n      \"Gold\" = \"#d4af37\",\n      \"Silver\" = \"#c0c0c0\",\n      \"Bronze\" = \"#cd7f32\"\n    )\n  ) +\n  labs(\n    x = \"Year\",\n    y = NULL,\n    color = \"Medal\"\n  ) +\n  theme_minimal() +\n  theme(\n    legend.position = c(0.2, 0.8),\n    legend.direction = \"horizontal\",\n    legend.background = element_rect(\n      fill = \"white\",\n      color = \"gray\"\n    )\n  )"
  },
  {
    "objectID": "Dashboard.html#column---medals-by-country-1",
    "href": "Dashboard.html#column---medals-by-country-1",
    "title": "Dashboard Example",
    "section": "Column - Medals By country",
    "text": "Column - Medals By country\n\nRow - Value boxes\n\nwinter_most_golds &lt;- winter_olympics |&gt;\n  filter(medal == \"Gold\") |&gt;\n  count(team, sort = TRUE) |&gt;\n  slice_head(n = 1)\n\nwinter_most_silvers &lt;- winter_olympics |&gt;\n  filter(medal == \"Silver\") |&gt;\n  count(team, sort = TRUE) |&gt;\n  slice_head(n = 1)\n\nwinter_most_bronzes &lt;- winter_olympics |&gt;\n  filter(medal == \"Bronze\") |&gt;\n  count(team, sort = TRUE) |&gt;\n  slice_head(n = 1)\n\n\nMost Golds:\n305\nCanada\n\n\nMost Silvers:\n308\nUnited States\n\n\nMost Bronzes:\n215\nFinland\n\n\n\nRow - Tabsets of tables\n\nTeams sorted in descending order of total medals.\n\nwinter_olympics |&gt;\n  count(team, medal) |&gt;\n  pivot_wider(names_from = medal, values_from = n, values_fill = 0) |&gt;\n  mutate(total = Bronze + Gold + Silver) |&gt;\n  arrange(desc(total), team) |&gt;\n  slice_head(n = 30) |&gt;\n  select(Team = team, Gold, Silver, Bronze) |&gt;\n  gt() |&gt;\n  cols_align(align = \"left\", columns = Team) |&gt;\n  data_color(\n    method = \"numeric\",\n    palette = \"nord::aurora\"\n  )\n\n\n\n\n\n\n\nTeam\nGold\nSilver\nBronze\n\n\n\n\nUnited States\n166\n308\n161\n\n\nCanada\n305\n199\n107\n\n\nNorway\n151\n165\n127\n\n\nSoviet Union\n250\n97\n93\n\n\nSweden\n125\n126\n177\n\n\nFinland\n66\n145\n215\n\n\nGermany\n153\n136\n97\n\n\nAustria\n79\n98\n103\n\n\nSwitzerland\n76\n70\n129\n\n\nRussia\n94\n89\n77\n\n\nItaly\n57\n57\n77\n\n\nEast Germany\n58\n50\n54\n\n\nCzechoslovakia\n2\n81\n75\n\n\nFrance\n36\n35\n79\n\n\nNetherlands\n42\n38\n42\n\n\nSouth Korea\n50\n26\n10\n\n\nGreat Britain\n42\n10\n31\n\n\nWest Germany\n15\n22\n45\n\n\nChina\n16\n30\n34\n\n\nCzech Republic\n27\n12\n34\n\n\nJapan\n17\n22\n24\n\n\nUnified Team\n35\n10\n14\n\n\nPoland\n6\n10\n11\n\n\nSlovenia\n2\n4\n12\n\n\nAustralia\n6\n3\n7\n\n\nBelarus\n6\n4\n5\n\n\nLatvia\n0\n8\n7\n\n\nBelgium\n2\n4\n7\n\n\nHungary\n0\n4\n8\n\n\nCroatia\n4\n6\n1\n\n\n\n\n\n\n\n\n\nTeams sorted in ascending order of total medals.\n\nwinter_olympics |&gt;\n  count(team, medal) |&gt;\n  pivot_wider(names_from = medal, values_from = n, values_fill = 0) |&gt;\n  mutate(total = Bronze + Gold + Silver) |&gt;\n  arrange(total, team) |&gt;\n  slice_head(n = 30) |&gt;\n  select(Team = team, Gold, Silver, Bronze) |&gt;\n  gt() |&gt;\n  cols_align(align = \"left\", columns = Team) |&gt;\n  data_color(\n    method = \"numeric\",\n    palette = \"nord::frost\"\n  )\n\n\n\n\n\n\n\nTeam\nGold\nSilver\nBronze\n\n\n\n\nNepal\n1\n0\n0\n\n\nNew Zealand\n0\n1\n0\n\n\nUzbekistan\n1\n0\n0\n\n\nLuxembourg\n0\n2\n0\n\n\nNorth Korea\n0\n1\n1\n\n\nRomania\n0\n0\n2\n\n\nSpain\n1\n0\n1\n\n\nDenmark\n0\n5\n0\n\n\nSlovakia\n2\n2\n1\n\n\nBulgaria\n1\n2\n3\n\n\nEstonia\n4\n2\n1\n\n\nIndia\n7\n0\n0\n\n\nKazakhstan\n1\n3\n3\n\n\nYugoslavia\n0\n6\n1\n\n\nLiechtenstein\n2\n2\n5\n\n\nCroatia\n4\n6\n1\n\n\nUkraine\n5\n1\n5\n\n\nHungary\n0\n4\n8\n\n\nBelgium\n2\n4\n7\n\n\nBelarus\n6\n4\n5\n\n\nLatvia\n0\n8\n7\n\n\nAustralia\n6\n3\n7\n\n\nSlovenia\n2\n4\n12\n\n\nPoland\n6\n10\n11\n\n\nUnified Team\n35\n10\n14\n\n\nJapan\n17\n22\n24\n\n\nCzech Republic\n27\n12\n34\n\n\nChina\n16\n30\n34\n\n\nWest Germany\n15\n22\n45\n\n\nGreat Britain\n42\n10\n31"
  },
  {
    "objectID": "Woznichak,RickyAO4_CurrentKeywords4.22.html",
    "href": "Woznichak,RickyAO4_CurrentKeywords4.22.html",
    "title": "4.22 SemRush AO4",
    "section": "",
    "text": "# Load the dataset\ndata &lt;- read.csv(\"4.21CurrentKeywords.csv\")\n\n\n# Inspect column names (you've already done this)\ncolnames(data)\n\n[1] \"Keyword\"            \"SERP.Position\"      \"Search.Volume\"     \n[4] \"Keyword.Difficulty\"\n\n\n\n# Step 3: Create log-transformed Search Volume\ndata$log_volume &lt;- log(data$Search.Volume + 1)\n\n\n# Step 4: Create the interaction term\ndata$interaction &lt;- data$log_volume * data$Keyword.Difficulty\n\n\n# Step 5: Fit the multiple linear regression model\nmodel &lt;- lm(SERP.Position ~ log_volume + Keyword.Difficulty + interaction, data = data)\n\n\n# Step 6: View the results\nsummary(model)\n\n\nCall:\nlm(formula = SERP.Position ~ log_volume + Keyword.Difficulty + \n    interaction, data = data)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-1.6631 -0.5741  0.1947  0.4175  1.4310 \n\nCoefficients:\n                   Estimate Std. Error t value Pr(&gt;|t|)\n(Intercept)          2.1242     2.3475   0.905    0.374\nlog_volume           0.6450     0.4783   1.349    0.190\nKeyword.Difficulty   9.5944     5.8037   1.653    0.111\ninteraction         -1.7291     1.0675  -1.620    0.118\n\nResidual standard error: 0.8725 on 25 degrees of freedom\nMultiple R-squared:  0.1041,    Adjusted R-squared:  -0.003455 \nF-statistic: 0.9679 on 3 and 25 DF,  p-value: 0.4234\n\n\n\n# Load necessary libraries\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.4     ✔ tidyr     1.3.1\n✔ purrr     1.0.4     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\n\n\n# Load your dataset\nkeywords_df &lt;- read.csv(\"4.21CurrentKeywords.csv\")\n\n\n# Create a log-transformed search volume column\nkeywords_df$log_volume &lt;- log(keywords_df$Search.Volume + 1)\n\n\n# Optional: Clean SERP positions if needed\nkeywords_df &lt;- keywords_df %&gt;% filter(!is.na(SERP.Position))\n\n\n# Create the scatterplot\nggplot(keywords_df, aes(x = log_volume, y = SERP.Position)) +\n  geom_point(aes(size = Keyword.Difficulty, color = Keyword.Difficulty), alpha = 0.8) +\n  scale_y_reverse() +  # Lower SERP positions are better\n  scale_color_gradient(low = \"#00BFC4\", high = \"#F8766D\") +\n  scale_size_continuous(range = c(2, 8)) +\n  labs(\n    title = \"SERP Position vs. log(Search Volume)\",\n    subtitle = \"Bubble size and color represent Keyword Difficulty\",\n    x = \"log(Search Volume)\",\n    y = \"SERP Position (Lower is Better)\",\n    color = \"Keyword Difficulty\",\n    size = \"Keyword Difficulty\"\n  ) +\n  theme_minimal(base_size = 14) +\n  theme(\n    legend.position = \"right\",\n    panel.grid.minor = element_blank(),\n    plot.title = element_text(face = \"bold\")\n  )\n\n\n\n\n\n\n\n\n\n# Load necessary libraries\nlibrary(tidyverse)\nlibrary(ggrepel)\n\n\n# Load your dataset\nkeywords_df &lt;- read.csv(\"4.21CurrentKeywords.csv\")\n\n# Create log-transformed search volume\nkeywords_df$log_volume &lt;- log(keywords_df$Search.Volume + 1)\n\n# Filter out missing values\nkeywords_df &lt;- keywords_df %&gt;% filter(!is.na(SERP.Position))\n\n\n# Set thresholds for difficulty and volume\ndifficulty_threshold &lt;- 50  # Difficulty below 50 is ideal\nvolume_threshold &lt;- median(keywords_df$Search.Volume, na.rm = TRUE)  # Use median for this dataset\n\n\n# Assign quadrants\nkeywords_df &lt;- keywords_df %&gt;%\n  mutate(\n    Opportunity = case_when(\n      Keyword.Difficulty &lt; difficulty_threshold & Search.Volume &gt;= volume_threshold ~ \"High Opportunity\",\n      Keyword.Difficulty &gt;= difficulty_threshold & Search.Volume &gt;= volume_threshold ~ \"Competitive\",\n      Keyword.Difficulty &lt; difficulty_threshold & Search.Volume &lt; volume_threshold ~ \"Niche Opportunity\",\n      TRUE ~ \"Low Priority\"\n    )\n  )\n\n\n# Plot Keyword Opportunity Matrix\nggplot(keywords_df, aes(x = Keyword.Difficulty, y = Search.Volume, color = Opportunity)) +\n  geom_point(size = 3, alpha = 0.8) +\n  geom_text_repel(aes(label = Keyword), size = 3, max.overlaps = 12, box.padding = 0.4) +\n  geom_vline(xintercept = difficulty_threshold, linetype = \"dashed\", color = \"gray40\") +\n  geom_hline(yintercept = volume_threshold, linetype = \"dashed\", color = \"gray40\") +\n  scale_color_manual(values = c(\n    \"High Opportunity\" = \"#00BFC4\",\n    \"Competitive\" = \"#F8766D\",\n    \"Niche Opportunity\" = \"#7CAE00\",\n    \"Low Priority\" = \"gray60\"\n  )) +\n  labs(\n    title = \"Keyword Opportunity Matrix\",\n    subtitle = \"Based on Search Volume and Keyword Difficulty\",\n    x = \"Keyword Difficulty\",\n    y = \"Search Volume\",\n    color = \"Opportunity Zone\"\n  ) +\n  theme_minimal(base_size = 14) +\n  theme(\n    panel.grid.minor = element_blank(),\n    plot.title = element_text(face = \"bold\"),\n    legend.position = \"bottom\"\n  )\n\nWarning: ggrepel: 27 unlabeled data points (too many overlaps). Consider\nincreasing max.overlaps\n\n\n\n\n\n\n\n\n\n\n# Load libraries\nlibrary(tidyverse)\nlibrary(knitr)\n\n# Load data\nkeywords_df &lt;- read.csv(\"4.21CurrentKeywords.csv\")\n\n# Format Keyword Difficulty as a percentage (with % sign)\nkeywords_df %&gt;%\n  mutate(Keyword.Difficulty = paste0(round(Keyword.Difficulty, 0), \"%\")) %&gt;%\n  select(Keyword, Search.Volume, Keyword.Difficulty, SERP.Position) %&gt;%\n  arrange(SERP.Position) %&gt;%\n  kable(caption = \"Keywords Sorted by SERP Position with Difficulty as %\")\n\n\nKeywords Sorted by SERP Position with Difficulty as %\n\n\n\n\n\n\n\n\nKeyword\nSearch.Volume\nKeyword.Difficulty\nSERP.Position\n\n\n\n\nproduct frameworks\n110\n0%\n4\n\n\nproduct management tutorial\n30\n0%\n4\n\n\ndigital products\n8100\n1%\n4\n\n\nproduct management software\n1000\n0%\n4\n\n\ncomplexity matrix\n90\n0%\n5\n\n\nproduct management frameworks\n320\n0%\n5\n\n\nproduct manager frameworks\n70\n0%\n5\n\n\ngame framework\n170\n0%\n5\n\n\nproduct customer matrix example\n170\n0%\n5\n\n\nproduct development frameworks\n50\n0%\n5\n\n\n5c framework\n70\n0%\n5\n\n\nwhat is digital product\n720\n1%\n5\n\n\nansoff product market growth matrix\n880\n1%\n5\n\n\ndefine digital product\n90\n0%\n6\n\n\nproduct framework\n110\n0%\n6\n\n\nframeworks for product managers\n30\n0%\n6\n\n\nproduct market matrix example\n110\n0%\n6\n\n\nfractional cpo\n210\n0%\n6\n\n\nmarket matrix\n70\n0%\n6\n\n\nproduct management framework\n210\n0%\n6\n\n\nproduct manager big tech\n40\n0%\n6\n\n\nwhat is a digital product\n1600\n1%\n6\n\n\nframework for product managers\n260\n0%\n6\n\n\nproduct development framework\n90\n0%\n6\n\n\nagile methodology in product development\n140\n0%\n6\n\n\nproduct market growth matrix examples\n110\n0%\n6\n\n\nproduct market matrix\n880\n0%\n7\n\n\nwhats a digital product\n140\n0%\n7\n\n\nproduct management tools\n1000\n0%\n7\n\n\n\n\n\n\n# Load libraries\nlibrary(tidyverse)\nlibrary(gt)\n\n# Load data\nkeywords_df &lt;- read.csv(\"4.21CurrentKeywords.csv\")\n\n# Create styled table with Keyword Difficulty as percent\nkeywords_df %&gt;%\n  select(Keyword, Search.Volume, Keyword.Difficulty, SERP.Position) %&gt;%\n  arrange(SERP.Position) %&gt;%\n  gt() %&gt;%\n  tab_header(\n    title = \"Keyword Performance Table\",\n    subtitle = \"Keyword Difficulty displayed as percent\"\n  ) %&gt;%\n  fmt_percent(\n    columns = Keyword.Difficulty,\n    decimals = 0,\n    scale_values = FALSE  # Because your values are already in 0–100 range\n  ) %&gt;%\n  fmt_number(\n    columns = Search.Volume,\n    decimals = 0\n  ) %&gt;%\n  cols_label(\n    Keyword = \"Keyword\",\n    Search.Volume = \"Search Volume\",\n    Keyword.Difficulty = \"Difficulty\",\n    SERP.Position = \"SERP Rank\"\n  )\n\n\n\n\n\n\n\nKeyword Performance Table\n\n\nKeyword Difficulty displayed as percent\n\n\nKeyword\nSearch Volume\nDifficulty\nSERP Rank\n\n\n\n\nproduct frameworks\n110\n0%\n4\n\n\nproduct management tutorial\n30\n0%\n4\n\n\ndigital products\n8,100\n1%\n4\n\n\nproduct management software\n1,000\n0%\n4\n\n\ncomplexity matrix\n90\n0%\n5\n\n\nproduct management frameworks\n320\n0%\n5\n\n\nproduct manager frameworks\n70\n0%\n5\n\n\ngame framework\n170\n0%\n5\n\n\nproduct customer matrix example\n170\n0%\n5\n\n\nproduct development frameworks\n50\n0%\n5\n\n\n5c framework\n70\n0%\n5\n\n\nwhat is digital product\n720\n1%\n5\n\n\nansoff product market growth matrix\n880\n1%\n5\n\n\ndefine digital product\n90\n0%\n6\n\n\nproduct framework\n110\n0%\n6\n\n\nframeworks for product managers\n30\n0%\n6\n\n\nproduct market matrix example\n110\n0%\n6\n\n\nfractional cpo\n210\n0%\n6\n\n\nmarket matrix\n70\n0%\n6\n\n\nproduct management framework\n210\n0%\n6\n\n\nproduct manager big tech\n40\n0%\n6\n\n\nwhat is a digital product\n1,600\n1%\n6\n\n\nframework for product managers\n260\n0%\n6\n\n\nproduct development framework\n90\n0%\n6\n\n\nagile methodology in product development\n140\n0%\n6\n\n\nproduct market growth matrix examples\n110\n0%\n6\n\n\nproduct market matrix\n880\n0%\n7\n\n\nwhats a digital product\n140\n0%\n7\n\n\nproduct management tools\n1,000\n0%\n7\n\n\n\n\n\n\n\n\n# Load libraries\nlibrary(tidyverse)\nlibrary(knitr)\n\n# Load your dataset\nkeywords_df &lt;- read.csv(\"4.21CurrentKeywords.csv\")\n\n# Format Keyword Difficulty as a percentage (character string)\nkeywords_df &lt;- keywords_df %&gt;%\n  mutate(\n    `Keyword Difficulty` = paste0(round(Keyword.Difficulty, 0), \"%\")\n  ) %&gt;%\n  select(\n    Keyword,\n    `SERP Position` = SERP.Position,\n    `Search Volume` = Search.Volume,\n    `Keyword Difficulty`\n  ) %&gt;%\n  arrange(`SERP Position`)\n\n# Display as table\nkable(keywords_df, caption = \"Keyword Summary Table with Difficulty as %\")\n\n\nKeyword Summary Table with Difficulty as %\n\n\n\n\n\n\n\n\nKeyword\nSERP Position\nSearch Volume\nKeyword Difficulty\n\n\n\n\nproduct frameworks\n4\n110\n0%\n\n\nproduct management tutorial\n4\n30\n0%\n\n\ndigital products\n4\n8100\n1%\n\n\nproduct management software\n4\n1000\n0%\n\n\ncomplexity matrix\n5\n90\n0%\n\n\nproduct management frameworks\n5\n320\n0%\n\n\nproduct manager frameworks\n5\n70\n0%\n\n\ngame framework\n5\n170\n0%\n\n\nproduct customer matrix example\n5\n170\n0%\n\n\nproduct development frameworks\n5\n50\n0%\n\n\n5c framework\n5\n70\n0%\n\n\nwhat is digital product\n5\n720\n1%\n\n\nansoff product market growth matrix\n5\n880\n1%\n\n\ndefine digital product\n6\n90\n0%\n\n\nproduct framework\n6\n110\n0%\n\n\nframeworks for product managers\n6\n30\n0%\n\n\nproduct market matrix example\n6\n110\n0%\n\n\nfractional cpo\n6\n210\n0%\n\n\nmarket matrix\n6\n70\n0%\n\n\nproduct management framework\n6\n210\n0%\n\n\nproduct manager big tech\n6\n40\n0%\n\n\nwhat is a digital product\n6\n1600\n1%\n\n\nframework for product managers\n6\n260\n0%\n\n\nproduct development framework\n6\n90\n0%\n\n\nagile methodology in product development\n6\n140\n0%\n\n\nproduct market growth matrix examples\n6\n110\n0%\n\n\nproduct market matrix\n7\n880\n0%\n\n\nwhats a digital product\n7\n140\n0%\n\n\nproduct management tools\n7\n1000\n0%\n\n\n\n\n\n\nlibrary(randomForest)\n\nrandomForest 4.7-1.2\n\n\nType rfNews() to see new features/changes/bug fixes.\n\n\n\nAttaching package: 'randomForest'\n\n\nThe following object is masked from 'package:dplyr':\n\n    combine\n\n\nThe following object is masked from 'package:ggplot2':\n\n    margin\n\n\n\n# Load your dataset\nkeywords_df &lt;- read.csv(\"4.21CurrentKeywords.csv\")\n\n# Create a log-transformed version of search volume\nkeywords_df$log_volume &lt;- log(keywords_df$Search.Volume + 1)\n\n# Drop rows with missing values (if any)\nkeywords_df &lt;- na.omit(keywords_df)\n\n# Optional: View structure\nstr(keywords_df)\n\n'data.frame':   29 obs. of  5 variables:\n $ Keyword           : chr  \"define digital product\" \"product framework\" \"product market matrix\" \"complexity matrix\" ...\n $ SERP.Position     : int  6 6 7 5 6 4 5 5 6 6 ...\n $ Search.Volume     : int  90 110 880 90 30 110 320 70 110 210 ...\n $ Keyword.Difficulty: num  0.43 0.34 0.38 0.24 0.2 0.3 0.25 0.18 0.29 0.12 ...\n $ log_volume        : num  4.51 4.71 6.78 4.51 3.43 ...\n\n\n\n# Run the Random Forest model\nrf_model &lt;- randomForest(SERP.Position ~ log_volume + Keyword.Difficulty,\n                         data = keywords_df,\n                         ntree = 500,          # Number of trees\n                         importance = TRUE)    # Show variable importance\n\nWarning in randomForest.default(m, y, ...): The response has five or fewer\nunique values.  Are you sure you want to do regression?\n\n# View model summary\nprint(rf_model)\n\n\nCall:\n randomForest(formula = SERP.Position ~ log_volume + Keyword.Difficulty,      data = keywords_df, ntree = 500, importance = TRUE) \n               Type of random forest: regression\n                     Number of trees: 500\nNo. of variables tried at each split: 1\n\n          Mean of squared residuals: 1.196031\n                    % Var explained: -63.29\n\n\n\n# Plot importance of predictors\nvarImpPlot(rf_model, main = \"Variable Importance in Predicting SERP Position\")"
  },
  {
    "objectID": "Woznichak,RickyAO4_CurrentKeywords4.22.html#analytic-objective-4-worksheet",
    "href": "Woznichak,RickyAO4_CurrentKeywords4.22.html#analytic-objective-4-worksheet",
    "title": "4.22 SemRush AO4",
    "section": "",
    "text": "# Load the dataset\ndata &lt;- read.csv(\"4.21CurrentKeywords.csv\")\n\n\n# Inspect column names (you've already done this)\ncolnames(data)\n\n[1] \"Keyword\"            \"SERP.Position\"      \"Search.Volume\"     \n[4] \"Keyword.Difficulty\"\n\n\n\n# Step 3: Create log-transformed Search Volume\ndata$log_volume &lt;- log(data$Search.Volume + 1)\n\n\n# Step 4: Create the interaction term\ndata$interaction &lt;- data$log_volume * data$Keyword.Difficulty\n\n\n# Step 5: Fit the multiple linear regression model\nmodel &lt;- lm(SERP.Position ~ log_volume + Keyword.Difficulty + interaction, data = data)\n\n\n# Step 6: View the results\nsummary(model)\n\n\nCall:\nlm(formula = SERP.Position ~ log_volume + Keyword.Difficulty + \n    interaction, data = data)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-1.6631 -0.5741  0.1947  0.4175  1.4310 \n\nCoefficients:\n                   Estimate Std. Error t value Pr(&gt;|t|)\n(Intercept)          2.1242     2.3475   0.905    0.374\nlog_volume           0.6450     0.4783   1.349    0.190\nKeyword.Difficulty   9.5944     5.8037   1.653    0.111\ninteraction         -1.7291     1.0675  -1.620    0.118\n\nResidual standard error: 0.8725 on 25 degrees of freedom\nMultiple R-squared:  0.1041,    Adjusted R-squared:  -0.003455 \nF-statistic: 0.9679 on 3 and 25 DF,  p-value: 0.4234\n\n\n\n# Load necessary libraries\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.4     ✔ tidyr     1.3.1\n✔ purrr     1.0.4     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\n\n\n# Load your dataset\nkeywords_df &lt;- read.csv(\"4.21CurrentKeywords.csv\")\n\n\n# Create a log-transformed search volume column\nkeywords_df$log_volume &lt;- log(keywords_df$Search.Volume + 1)\n\n\n# Optional: Clean SERP positions if needed\nkeywords_df &lt;- keywords_df %&gt;% filter(!is.na(SERP.Position))\n\n\n# Create the scatterplot\nggplot(keywords_df, aes(x = log_volume, y = SERP.Position)) +\n  geom_point(aes(size = Keyword.Difficulty, color = Keyword.Difficulty), alpha = 0.8) +\n  scale_y_reverse() +  # Lower SERP positions are better\n  scale_color_gradient(low = \"#00BFC4\", high = \"#F8766D\") +\n  scale_size_continuous(range = c(2, 8)) +\n  labs(\n    title = \"SERP Position vs. log(Search Volume)\",\n    subtitle = \"Bubble size and color represent Keyword Difficulty\",\n    x = \"log(Search Volume)\",\n    y = \"SERP Position (Lower is Better)\",\n    color = \"Keyword Difficulty\",\n    size = \"Keyword Difficulty\"\n  ) +\n  theme_minimal(base_size = 14) +\n  theme(\n    legend.position = \"right\",\n    panel.grid.minor = element_blank(),\n    plot.title = element_text(face = \"bold\")\n  )\n\n\n\n\n\n\n\n\n\n# Load necessary libraries\nlibrary(tidyverse)\nlibrary(ggrepel)\n\n\n# Load your dataset\nkeywords_df &lt;- read.csv(\"4.21CurrentKeywords.csv\")\n\n# Create log-transformed search volume\nkeywords_df$log_volume &lt;- log(keywords_df$Search.Volume + 1)\n\n# Filter out missing values\nkeywords_df &lt;- keywords_df %&gt;% filter(!is.na(SERP.Position))\n\n\n# Set thresholds for difficulty and volume\ndifficulty_threshold &lt;- 50  # Difficulty below 50 is ideal\nvolume_threshold &lt;- median(keywords_df$Search.Volume, na.rm = TRUE)  # Use median for this dataset\n\n\n# Assign quadrants\nkeywords_df &lt;- keywords_df %&gt;%\n  mutate(\n    Opportunity = case_when(\n      Keyword.Difficulty &lt; difficulty_threshold & Search.Volume &gt;= volume_threshold ~ \"High Opportunity\",\n      Keyword.Difficulty &gt;= difficulty_threshold & Search.Volume &gt;= volume_threshold ~ \"Competitive\",\n      Keyword.Difficulty &lt; difficulty_threshold & Search.Volume &lt; volume_threshold ~ \"Niche Opportunity\",\n      TRUE ~ \"Low Priority\"\n    )\n  )\n\n\n# Plot Keyword Opportunity Matrix\nggplot(keywords_df, aes(x = Keyword.Difficulty, y = Search.Volume, color = Opportunity)) +\n  geom_point(size = 3, alpha = 0.8) +\n  geom_text_repel(aes(label = Keyword), size = 3, max.overlaps = 12, box.padding = 0.4) +\n  geom_vline(xintercept = difficulty_threshold, linetype = \"dashed\", color = \"gray40\") +\n  geom_hline(yintercept = volume_threshold, linetype = \"dashed\", color = \"gray40\") +\n  scale_color_manual(values = c(\n    \"High Opportunity\" = \"#00BFC4\",\n    \"Competitive\" = \"#F8766D\",\n    \"Niche Opportunity\" = \"#7CAE00\",\n    \"Low Priority\" = \"gray60\"\n  )) +\n  labs(\n    title = \"Keyword Opportunity Matrix\",\n    subtitle = \"Based on Search Volume and Keyword Difficulty\",\n    x = \"Keyword Difficulty\",\n    y = \"Search Volume\",\n    color = \"Opportunity Zone\"\n  ) +\n  theme_minimal(base_size = 14) +\n  theme(\n    panel.grid.minor = element_blank(),\n    plot.title = element_text(face = \"bold\"),\n    legend.position = \"bottom\"\n  )\n\nWarning: ggrepel: 27 unlabeled data points (too many overlaps). Consider\nincreasing max.overlaps\n\n\n\n\n\n\n\n\n\n\n# Load libraries\nlibrary(tidyverse)\nlibrary(knitr)\n\n# Load data\nkeywords_df &lt;- read.csv(\"4.21CurrentKeywords.csv\")\n\n# Format Keyword Difficulty as a percentage (with % sign)\nkeywords_df %&gt;%\n  mutate(Keyword.Difficulty = paste0(round(Keyword.Difficulty, 0), \"%\")) %&gt;%\n  select(Keyword, Search.Volume, Keyword.Difficulty, SERP.Position) %&gt;%\n  arrange(SERP.Position) %&gt;%\n  kable(caption = \"Keywords Sorted by SERP Position with Difficulty as %\")\n\n\nKeywords Sorted by SERP Position with Difficulty as %\n\n\n\n\n\n\n\n\nKeyword\nSearch.Volume\nKeyword.Difficulty\nSERP.Position\n\n\n\n\nproduct frameworks\n110\n0%\n4\n\n\nproduct management tutorial\n30\n0%\n4\n\n\ndigital products\n8100\n1%\n4\n\n\nproduct management software\n1000\n0%\n4\n\n\ncomplexity matrix\n90\n0%\n5\n\n\nproduct management frameworks\n320\n0%\n5\n\n\nproduct manager frameworks\n70\n0%\n5\n\n\ngame framework\n170\n0%\n5\n\n\nproduct customer matrix example\n170\n0%\n5\n\n\nproduct development frameworks\n50\n0%\n5\n\n\n5c framework\n70\n0%\n5\n\n\nwhat is digital product\n720\n1%\n5\n\n\nansoff product market growth matrix\n880\n1%\n5\n\n\ndefine digital product\n90\n0%\n6\n\n\nproduct framework\n110\n0%\n6\n\n\nframeworks for product managers\n30\n0%\n6\n\n\nproduct market matrix example\n110\n0%\n6\n\n\nfractional cpo\n210\n0%\n6\n\n\nmarket matrix\n70\n0%\n6\n\n\nproduct management framework\n210\n0%\n6\n\n\nproduct manager big tech\n40\n0%\n6\n\n\nwhat is a digital product\n1600\n1%\n6\n\n\nframework for product managers\n260\n0%\n6\n\n\nproduct development framework\n90\n0%\n6\n\n\nagile methodology in product development\n140\n0%\n6\n\n\nproduct market growth matrix examples\n110\n0%\n6\n\n\nproduct market matrix\n880\n0%\n7\n\n\nwhats a digital product\n140\n0%\n7\n\n\nproduct management tools\n1000\n0%\n7\n\n\n\n\n\n\n# Load libraries\nlibrary(tidyverse)\nlibrary(gt)\n\n# Load data\nkeywords_df &lt;- read.csv(\"4.21CurrentKeywords.csv\")\n\n# Create styled table with Keyword Difficulty as percent\nkeywords_df %&gt;%\n  select(Keyword, Search.Volume, Keyword.Difficulty, SERP.Position) %&gt;%\n  arrange(SERP.Position) %&gt;%\n  gt() %&gt;%\n  tab_header(\n    title = \"Keyword Performance Table\",\n    subtitle = \"Keyword Difficulty displayed as percent\"\n  ) %&gt;%\n  fmt_percent(\n    columns = Keyword.Difficulty,\n    decimals = 0,\n    scale_values = FALSE  # Because your values are already in 0–100 range\n  ) %&gt;%\n  fmt_number(\n    columns = Search.Volume,\n    decimals = 0\n  ) %&gt;%\n  cols_label(\n    Keyword = \"Keyword\",\n    Search.Volume = \"Search Volume\",\n    Keyword.Difficulty = \"Difficulty\",\n    SERP.Position = \"SERP Rank\"\n  )\n\n\n\n\n\n\n\nKeyword Performance Table\n\n\nKeyword Difficulty displayed as percent\n\n\nKeyword\nSearch Volume\nDifficulty\nSERP Rank\n\n\n\n\nproduct frameworks\n110\n0%\n4\n\n\nproduct management tutorial\n30\n0%\n4\n\n\ndigital products\n8,100\n1%\n4\n\n\nproduct management software\n1,000\n0%\n4\n\n\ncomplexity matrix\n90\n0%\n5\n\n\nproduct management frameworks\n320\n0%\n5\n\n\nproduct manager frameworks\n70\n0%\n5\n\n\ngame framework\n170\n0%\n5\n\n\nproduct customer matrix example\n170\n0%\n5\n\n\nproduct development frameworks\n50\n0%\n5\n\n\n5c framework\n70\n0%\n5\n\n\nwhat is digital product\n720\n1%\n5\n\n\nansoff product market growth matrix\n880\n1%\n5\n\n\ndefine digital product\n90\n0%\n6\n\n\nproduct framework\n110\n0%\n6\n\n\nframeworks for product managers\n30\n0%\n6\n\n\nproduct market matrix example\n110\n0%\n6\n\n\nfractional cpo\n210\n0%\n6\n\n\nmarket matrix\n70\n0%\n6\n\n\nproduct management framework\n210\n0%\n6\n\n\nproduct manager big tech\n40\n0%\n6\n\n\nwhat is a digital product\n1,600\n1%\n6\n\n\nframework for product managers\n260\n0%\n6\n\n\nproduct development framework\n90\n0%\n6\n\n\nagile methodology in product development\n140\n0%\n6\n\n\nproduct market growth matrix examples\n110\n0%\n6\n\n\nproduct market matrix\n880\n0%\n7\n\n\nwhats a digital product\n140\n0%\n7\n\n\nproduct management tools\n1,000\n0%\n7\n\n\n\n\n\n\n\n\n# Load libraries\nlibrary(tidyverse)\nlibrary(knitr)\n\n# Load your dataset\nkeywords_df &lt;- read.csv(\"4.21CurrentKeywords.csv\")\n\n# Format Keyword Difficulty as a percentage (character string)\nkeywords_df &lt;- keywords_df %&gt;%\n  mutate(\n    `Keyword Difficulty` = paste0(round(Keyword.Difficulty, 0), \"%\")\n  ) %&gt;%\n  select(\n    Keyword,\n    `SERP Position` = SERP.Position,\n    `Search Volume` = Search.Volume,\n    `Keyword Difficulty`\n  ) %&gt;%\n  arrange(`SERP Position`)\n\n# Display as table\nkable(keywords_df, caption = \"Keyword Summary Table with Difficulty as %\")\n\n\nKeyword Summary Table with Difficulty as %\n\n\n\n\n\n\n\n\nKeyword\nSERP Position\nSearch Volume\nKeyword Difficulty\n\n\n\n\nproduct frameworks\n4\n110\n0%\n\n\nproduct management tutorial\n4\n30\n0%\n\n\ndigital products\n4\n8100\n1%\n\n\nproduct management software\n4\n1000\n0%\n\n\ncomplexity matrix\n5\n90\n0%\n\n\nproduct management frameworks\n5\n320\n0%\n\n\nproduct manager frameworks\n5\n70\n0%\n\n\ngame framework\n5\n170\n0%\n\n\nproduct customer matrix example\n5\n170\n0%\n\n\nproduct development frameworks\n5\n50\n0%\n\n\n5c framework\n5\n70\n0%\n\n\nwhat is digital product\n5\n720\n1%\n\n\nansoff product market growth matrix\n5\n880\n1%\n\n\ndefine digital product\n6\n90\n0%\n\n\nproduct framework\n6\n110\n0%\n\n\nframeworks for product managers\n6\n30\n0%\n\n\nproduct market matrix example\n6\n110\n0%\n\n\nfractional cpo\n6\n210\n0%\n\n\nmarket matrix\n6\n70\n0%\n\n\nproduct management framework\n6\n210\n0%\n\n\nproduct manager big tech\n6\n40\n0%\n\n\nwhat is a digital product\n6\n1600\n1%\n\n\nframework for product managers\n6\n260\n0%\n\n\nproduct development framework\n6\n90\n0%\n\n\nagile methodology in product development\n6\n140\n0%\n\n\nproduct market growth matrix examples\n6\n110\n0%\n\n\nproduct market matrix\n7\n880\n0%\n\n\nwhats a digital product\n7\n140\n0%\n\n\nproduct management tools\n7\n1000\n0%\n\n\n\n\n\n\nlibrary(randomForest)\n\nrandomForest 4.7-1.2\n\n\nType rfNews() to see new features/changes/bug fixes.\n\n\n\nAttaching package: 'randomForest'\n\n\nThe following object is masked from 'package:dplyr':\n\n    combine\n\n\nThe following object is masked from 'package:ggplot2':\n\n    margin\n\n\n\n# Load your dataset\nkeywords_df &lt;- read.csv(\"4.21CurrentKeywords.csv\")\n\n# Create a log-transformed version of search volume\nkeywords_df$log_volume &lt;- log(keywords_df$Search.Volume + 1)\n\n# Drop rows with missing values (if any)\nkeywords_df &lt;- na.omit(keywords_df)\n\n# Optional: View structure\nstr(keywords_df)\n\n'data.frame':   29 obs. of  5 variables:\n $ Keyword           : chr  \"define digital product\" \"product framework\" \"product market matrix\" \"complexity matrix\" ...\n $ SERP.Position     : int  6 6 7 5 6 4 5 5 6 6 ...\n $ Search.Volume     : int  90 110 880 90 30 110 320 70 110 210 ...\n $ Keyword.Difficulty: num  0.43 0.34 0.38 0.24 0.2 0.3 0.25 0.18 0.29 0.12 ...\n $ log_volume        : num  4.51 4.71 6.78 4.51 3.43 ...\n\n\n\n# Run the Random Forest model\nrf_model &lt;- randomForest(SERP.Position ~ log_volume + Keyword.Difficulty,\n                         data = keywords_df,\n                         ntree = 500,          # Number of trees\n                         importance = TRUE)    # Show variable importance\n\nWarning in randomForest.default(m, y, ...): The response has five or fewer\nunique values.  Are you sure you want to do regression?\n\n# View model summary\nprint(rf_model)\n\n\nCall:\n randomForest(formula = SERP.Position ~ log_volume + Keyword.Difficulty,      data = keywords_df, ntree = 500, importance = TRUE) \n               Type of random forest: regression\n                     Number of trees: 500\nNo. of variables tried at each split: 1\n\n          Mean of squared residuals: 1.196031\n                    % Var explained: -63.29\n\n\n\n# Plot importance of predictors\nvarImpPlot(rf_model, main = \"Variable Importance in Predicting SERP Position\")"
  },
  {
    "objectID": "JimmyPics.html",
    "href": "JimmyPics.html",
    "title": "PictureShow",
    "section": "",
    "text": "/"
  },
  {
    "objectID": "JimmyPics.html#halloween-2024",
    "href": "JimmyPics.html#halloween-2024",
    "title": "PictureShow",
    "section": "",
    "text": "/"
  }
]